<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
         <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
        <link rel="stylesheet" href="assets/css/normalize.css">
        <link rel="stylesheet" href="assets/css/barraDisposicion.css">
        <link rel="stylesheet" href="assets/css/estiloProyectos.css">
        <script src="assets/js/despliegue.js"></script>
        <title>Proyecto 1</title>
    </head>

    <body>
        {{>header}}
        {{>navbar}}
        <article class="articulo">
            <h1>ESTRUCTURAS DE DATOS C++</h1>
            <section id="contenedor">
                <div class="contenedor__video">
                    <video src="videos/proyecto1.mp4" controls></video>
                </div>

                <section class="section__descripcion">
                    <button class="subtitulo"><span></span>DESCRIPCION</button>

                    <div class="infoAdicional">
                        <p>Este proyecto trata sobre la estructura de datos en
                            c++, tratando las siguentes estructuras: </p>
                        <ul>
                            <li>Cola</li>
                            <li>Pila</li>
                            <li>arbol ABB</li>
                            <li>Arboles AVL</li>
                        </ul>
                        <p>
                            En este emocionante proyecto, hemos explorado la
                            creación y aplicación de estructuras de datos
                            fundamentales
                            utilizando el lenguaje de programación C++. Nuestro
                            objetivo ha sido desarrollar soluciones de
                            software
                            que
                            mejoren la organización y manipulación de datos, y
                            al mismo tiempo, comprender cómo estas
                            estructuras
                            interactúan con la memoria del sistema. Hemos creado
                            una variedad de estructuras de datos
                            esenciales,
                            como
                            colas, pilas, árboles binarios de búsqueda (ABB) y
                            árboles AVL, desde cero. Hemos tomado un
                            enfoque
                            práctico
                            al usar la flexibilidad de structs para definir
                            nuestros propios nodos y elementos de datos.
                            Pero lo
                            que
                            hace que este proyecto sea especialmente intrigante
                            es nuestra exploración en la asignación de
                            memoria
                            dinámica y cómo esta elección afecta directamente el
                            rendimiento y la eficiencia de nuestras
                            soluciones.
                            Al
                            desarrollar estas estructuras de datos, hemos
                            aprendido a manejar con destreza la memoria de
                            pila
                            (stack) y
                            la memoria dinámica (heap). Este conocimiento ha
                            sido crucial para optimizar nuestras
                            operaciones y
                            asegurar
                            un flujo eficiente de datos. A medida que
                            adquiríamos experiencia en la implementación de
                            estas
                            estructuras,
                            también mejorábamos nuestras habilidades de
                            programación en C++ y ampliábamos nuestra
                            comprensión de
                            cómo
                            crear soluciones de software eficaces y sólidas.
                        </p>
                    </div>
                </section>

                <section class="tecnologia">
                    <button class="subtitulo"><span></span>TECNOLOGIA USADO</button>
                    <div class="infoAdicional">

                        <ul>
                            <li>
                                <h4>C++</h4>
                                <p>
                                    He elegido el lenguaje de programación C++
                                    para este proyecto de implementación de
                                    estructuras
                                    de
                                    datos por varias razones clave:
                                </p>
                                <ol>
                                    <li>
                                        <h5>Eficiencia y Rendimiento:</h5>
                                        <p>
                                            C++ es conocido por su alto
                                            rendimiento y eficiencia. Al
                                            implementar estructuras
                                            de
                                            datos,
                                            especialmente aquellas que
                                            involucran operaciones intensivas,
                                            como árboles AVL y
                                            ABB,
                                            C++
                                            nos permite crear soluciones
                                            optimizadas que gestionan
                                            eficientemente la memoria
                                            y
                                            ejecutan
                                            operaciones de manera rápida.
                                        </p>
                                    </li>

                                    <li>
                                        <h5>Control de Memoria:</h5>
                                        <p>
                                            C++ ofrece un mayor control sobre la
                                            asignación y liberación de memoria
                                            en
                                            comparación
                                            con
                                            lenguajes de programación de más
                                            alto nivel. Esto es esencial en la
                                            implementación
                                            de
                                            estructuras de datos donde la
                                            gestión de la memoria, tanto en la
                                            pila (stack)
                                            como
                                            en el
                                            heap, es crucial para el rendimiento
                                            y la eficiencia.
                                        </p>
                                    </li>

                                    <li>
                                        <h5>Flexibilidad de Estructuras de
                                            Datos:</h5>
                                        <p>
                                            Al utilizar structs y clases en C++,
                                            tenemos la flexibilidad de definir
                                            nuestras
                                            propias
                                            estructuras de datos personalizadas.
                                            Esto es esencial para crear
                                            implementaciones
                                            que se
                                            adapten a las necesidades
                                            específicas del proyecto y del
                                            dominio del problema.
                                        </p>
                                    </li>
                                </ol>
                            </li>
                        </ul>
                    </div>
                </section>
            </section>
        </article>

        {{>footer}}
        <script
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
            crossorigin="anonymous">
        </script>
    </body>

</html>